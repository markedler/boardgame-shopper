@model ListViewModels.Index
@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Mvc.Common

@{
    ViewData["Title"] = "Game List";
}

<h1>Game List</h1>

<form asp-controller="List" asp-action="Index" method="post float-right">
    <div class="form-row">
        <div class="col">
                @Html.TextBoxFor(model => model.Search, new { @class="form-control", placeholder="Search" } )
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>
@if (Model.Games.Any())
{
    <div class="row">
        <div class="col-lg-12" >
            @Html.PagedListPager(Model.Games, page => Url.Action("Index", new { page = page, sort = Model.Sort, desc = Model.Desc, search = Model.Search }),
            new PagedListRenderOptions
                {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
        </div>
    </div>
    <div class="row mb-2">
        <div class=" col-lg-12 small text-muted">
            Viewing page @Model.Page of @Model.TotalPages (@Model.TotalCount items total)
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th></th>
                        <th>
                            <a asp-action="Index" asp-route-sort="name" asp-route-desc='@(Model.Sort == "name" ? !Model.Desc : Model.Desc)'>Name</a>
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sort="store" asp-route-desc='@(Model.Sort == "store" ? !Model.Desc : Model.Desc)'>Store</a>
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sort="price" asp-route-desc='@(Model.Sort == "price" ? !Model.Desc : Model.Desc)'>Current Price</a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var game in Model.Games)
                    {
                        <tr onclick="window.open('@game.Url', '_blank');" style="cursor: pointer">
                            <td class="text-center">
                                @if (game.Image != null)
                                {
                                    <a href="@game.Url" target="_blank">
                                        <img src="@game.Image" style="max-height: 60px" />
                                    </a>
                                }
                            </td>
                            <td><a href="@game.Url" target="_blank">@game.Name</a></td>
                            <td style="white-space: nowrap">
                                @Html.ActionLink(game.Store, "Detail", "Store", new { id = game.StoreId })
                            </td>
                            <td style="white-space: nowrap">@string.Format("{0:c}", game.Price)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="small text-muted">
        Viewing page @Model.Page of @Model.TotalPages (@Model.TotalCount items total)
    </div>
    <div>
        @Html.PagedListPager(Model.Games, page => Url.Action("Index", new { page = page, sort = Model.Sort, desc = Model.Desc, search = Model.Search }),
            new PagedListRenderOptions
            {
                FunctionToDisplayEachPageNumber = page => ((page - 1) * Model.PageSize + 1).ToString() + "-" + (((page - 1) * Model.PageSize) + Model.PageSize).ToString(),
                MaximumPageNumbersToDisplay = 5,
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
    </div>
}
else 
{
    <div class="alert alert-primary mt-5">
        No games found that match the search criteria.
    </div>
}